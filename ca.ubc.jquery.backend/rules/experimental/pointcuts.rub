//// Rules and facts for these predicates are defined by the// AspectParser whch translates pointcut declarations in them into // JQuery queriesTYPE PCD AS Stringpointcut :: PCDMODES (F) IS NONDET ENDshadow :: PCD, ObjectMODES (B,F) IS NONDET ENDTYPE Pattern<> = RegExpPat<>               | Name<>               | StarPat<>               | SubtypePat<>/*THESE ARE USED IN TYPE NAMES AND METHOD NAMES*/TYPE RegExpPat<> AS <org.apache.regexp.RE>	/*multiple wildcard symbols exist in this string*/TYPE Name<> AS <String>	/*match this string exactly*/TYPE StarPat<> AS <>	/*this string matches any word*/		TYPE SubtypePat<> AS <Pattern<>>match :: Pattern<>, Elementmatch(RegExpPat<?re>, ?X)   :- re_name(?X, ?re).match(Name<?S>, ?X)         :- name(?X, ?S).match(StarPat<>, ?X)        :- Element(?X).match(SubtypePat<?P>, ?X)   :- match(?P,?Super), subtype*(?Super,?X).TYPE DotDotPat<> AS <>TYPE ListPatEl<> = Pattern<>                 | DotDotPat<>               match_args :: [ListPatEl<>], [Type] match_args([],[]).match_args([?p|?ps],[?t|?ts]) :- match(?p,?t), match_args(?ps,?ts).match_args([DotDotPat<>|?ps],?ts) :- append(?,?rts,?ts), match_args(?ps,?rts).