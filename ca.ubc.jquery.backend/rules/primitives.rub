primitive :: Primitive
MODES
   (F) IS MULTI
END

pasteSnippet("primitive(?Prim)", "?P is a primitive type").


primitive(float::Primitive).
primitive(double::Primitive).
primitive(boolean::Primitive).
primitive(byte::Primitive).
primitive(short::Primitive).
primitive(int::Primitive).
primitive(long::Primitive).
primitive(char::Primitive).
primitive(void::Primitive).

name(float::Primitive, float).
name(double::Primitive, double).
name(boolean::Primitive, boolean).
name(byte::Primitive, byte).
name(short::Primitive, short).
name(int::Primitive, int).
name(long::Primitive, long).
name(char::Primitive, char).
name(void::Primitive, void).

arrayTypeOf :: RefType, Type
MODES 
	(B,F) IS NONDET
	(F,B) IS DET
END

arrayTypeOf(?rep::RefType,?ElType::RefType) :-
	string_append(?ElType,"[",?rep),
	NOT(primitive(?ElType::Primitive)).
arrayTypeOf(?rep::RefType,?ElType::Primitive) :-
	string_append(?ElType,"[",?rep),
	primitive(?ElType::Primitive).

//name(?arr, ?arrName) :- 
//	arrayTypeOf(?arr,?type),
//	name(?type,?elName),
//	convertToString(?arrName,?arrNameS),
//	string_append(?elName,"[]",?arrNameS).
	